#!/usr/bin/perl -w

use strict;

print <<'END';
set xlabel "Time spent stalled (%)" 
set xlabel  offset character 0, 0.75, 0 font "" textcolor lt -1 norotate
set xrange [ 0.24:0.1 ] reverse writeback
set ylabel "Average SSIM (dB)" 
set ylabel  offset character 3, 0, 0 font "" textcolor lt -1 rotate
set yrange [ 15.93:16.7 ] noreverse writeback
set border 3 front lt black linewidth 1.000 dashtype solid
set xtics border out scale 0.5,0.5 offset 0,0.5 nomirror norotate  autojustify
set ytics border out scale 0.5,0.5 offset 0.25,0 nomirror norotate  autojustify
set xtics 0.04
set ytics 0.2
set font "Times,10"
unset key
set noclip
END

my $n = 0;

my %colors = (Fugu => 0xd62728,
	      q{MPC-HM} => 0x1f77b4,
	      q{RobustMPC-HM} => 0x8c564b,
	      BBA => 0x2ca02c,
	      Pensieve => 0x9467bd);

my @data;

while (<>) {
  chomp;
  next if m{^#};
  $n++;
  s{%}{}g;
  s{;}{}g;
  s{,}{}g;
  my ($name, $stall_low, $stall_high, $stall_mean, $ssim_low, $ssim_high, $ssim_mean) = (split)[0,5,7,9,13,15,17];
  if ($name eq q{puffer_ttp_cl/bbr} || $name eq q{Puffer}) {
      $name = q{Fugu};
  } elsif ($name eq q{pensieve/bbr}) {
      $name = q{Pensieve};
  } elsif ($name eq q{robust_mpc/bbr}) {
      $name = q{RobustMPC-HM};
  } elsif ($name eq q{mpc/bbr}) {
      $name = q{MPC-HM};
  } elsif ($name eq q{linear_bba/bbr}) {
      $name = q{BBA};
  } 

  push @data, qq{$stall_mean $ssim_mean $stall_low $stall_high $ssim_low $ssim_high $colors{$name} "$name"};
}

print qq{set terminal "svg" font "Times,20"\n};
print qq{set errorbars 0.5\n};
print qq{plot '-' using 1:2:3:4:5:6:7 with xyerrorbars lc rgb var lw 1.75 pt 7 ps 0.33, '-' using 1:2:8 with labels offset 0,-.5\n};

print join qq{\n}, @data;
print qq{\ne\n};
print join qq{\n}, @data;
print qq{\ne\n};

